@{
    ViewBag.Title = "Portefeuille de couverture";
}
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Portefeuille de couverture
            </h1>
            <ol class="breadcrumb">
                <li>
                    @Html.ActionLink("Multimonde 2021", "Index", "Home")
                </li>
                <li>Portefeuille de couverture</li>
            </ol>
        </div>
    </div>
    @*<hgroup class="title">
            <h1>@ViewBag.Title.</h1>
            <h2>@ViewBag.Message</h2>
        </hgroup>*@



    <table border="1" style="width:100%" class="section">
        @using (Html.BeginForm())
        {
            object deltas;
            object intervalles;

            @*@ViewData.TryGetValue("intervalles", out intervalles);*@
            <tr>
                <th>Sous-jacents</th>
                <th>Delta</th>
                <th>Intervalle de confiance</th>
            </tr>

            if (@ViewData.TryGetValue("D_Eur_Stoxx 50", out deltas) && @ViewData.TryGetValue("I_Eur_Stoxx 50", out intervalles))
            {
                <tr>
                    <td>Euro Stoxx 50(EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>Euro Stoxx 50(EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_SP_500", out deltas) && @ViewData.TryGetValue("I_SP_500", out intervalles))
            {
                <tr>
                    <td>S&P 500(USD)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>S&P 500(USD)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_Nikkei_225", out deltas) && @ViewData.TryGetValue("I_Nikkei_225", out intervalles))
            {
                <tr>
                    <td>Nikkei 225(JPY)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>Nikkei 225(JPY)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_Hang_Seng", out deltas) && @ViewData.TryGetValue("I_Hang_Seng", out intervalles))
            {
                <tr>
                    <td>Hang Seng(HKD)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>Hang Seng(HKD)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_FTSE_100", out deltas) && @ViewData.TryGetValue("I_FTSE_100", out intervalles))
            {
                <tr>
                    <td>FTSE 100(GBP)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>FTSE 100(GBP)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_SP_ASX_200", out deltas) && @ViewData.TryGetValue("I_SP_ASX_200", out intervalles))
            {
                <tr>
                    <td>SP ASX 200(AUD)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>SP ASX 200(AUD)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_ZC_USD", out deltas) && @ViewData.TryGetValue("I_ZC_USD", out intervalles))
            {
                <tr>
                    <td>ZC(USD -> EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>ZC(USD -> EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_ZC_GBP", out deltas) && @ViewData.TryGetValue("I_ZC_GBP", out intervalles))
            {
                <tr>
                    <td>ZC(GBP -> EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>ZC(GBP -> EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_ZC_JPY", out deltas) && @ViewData.TryGetValue("I_ZC_JPY", out intervalles))
            {
                <tr>
                    <td>ZC(JPY -> EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>ZC(JPY -> EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_ZC_HKD", out deltas) && @ViewData.TryGetValue("I_ZC_HKD", out intervalles))
            {
                <tr>
                    <td>ZC(HKD -> EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>ZC(HKD -> EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_ZC_AUD", out deltas) && @ViewData.TryGetValue("I_ZC_AUD", out intervalles))
            {
                <tr>
                    <td>ZC(AUD -> EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>ZC(AUD -> EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }
            if (@ViewData.TryGetValue("D_ZC_EUR", out deltas) && @ViewData.TryGetValue("I_ZC_EUR", out intervalles))
            {
                <tr>
                    <td>ZC(EUR)</td>
                    <td>@deltas.ToString()</td>
                    <td>@intervalles.ToString()</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>ZC(EUR)</td>
                    <td>0</td>
                    <td>0</td>
                </tr>
            }

        }
    </table>
    @using (Html.BeginForm("HandleFormCouverture", "Home", FormMethod.Post, new { @class = "row well" }))
    {
        <p>Date de début de Calcul entre 01.10.2015 et 12.11.2021 (au format jj.mm.aaaa):</p>
        @Html.TextBox("date")
        <br />
        <input type="submit" value="Calcul" class="btn btn-primary" />

    }

</div>